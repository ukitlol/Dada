# Define the Player class
class Player:
    def __init__(self, name, salary, years):
        self.name = name
        self.salary = salary
        self.years = years

# Function to calculate maximum contract for a new player
def maxContract(salaryCap, roster, newPlayerYears):
    # Calculate the total salary currently used by the roster
    currentSalary = sum(player.salary for player in roster)
    
    # Calculate the remaining cap space
    remainingCapSpace = salaryCap - currentSalary

    # Determine the maximum contract percentage based on the player's experience
    if newPlayerYears < 7:
        maxPercentage = 0.25
    elif 7 <= newPlayerYears <= 10:
        maxPercentage = 0.30
    else:
        maxPercentage = 0.35

    # Calculate the maximum contract based on the cap percentage
    maxAllowedContract = salaryCap * maxPercentage

    # Return the minimum between the max allowed by the cap and the remaining cap space
    return min(maxAllowedContract, remainingCapSpace)

# Salary cap in dollars
salaryCap = 140_500_000  

# Creating players and adding them to the roster
roster = [
    Player("Fred Van Fleet", 42_846_615, 8),
    Player("Dillon Brooks", 22_255_493, 7),
    Player("Steven Adams", 12_600_000, 11),
    Player("Jalen Green", 12_483_048, 3),
    Player("Reed Shepherd", 10_098_960, 1)
    Player("Jabari Smith Jr", 9_770_880, 2)
    Player("Jeff Green", 9_600_000, 16)
    Player("Amen Thompson", 9_249_960, 2)
    Player("Jock Landale", 8_000_000, 3)
    Player("Jae'Sean Tate", 7_065_217, 4)
    Player("Alpren Sengun", 5,424,654, 3)
    Player("Aaron Holiday", 4,668,000, 6)
    Player("Tari Eason", 3,695,160, 2)
    Player("Cam Whitmore", 3,379,080, 1)

]

# Years in league for the new player you're considering
newPlayerYears = 6

# Calculate the maximum contract that can be offered to the new player
maxOffer = maxContract(salaryCap, roster, newPlayerYears)
print(f"The maximum contract you can offer is: ${maxOffer:,}")
