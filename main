# Define the Player class
class Player:
    def __init__(self, name, salary, years):
        self.name = name
        self.salary = salary
        self.years = years

# Function to calculate the maximum contract based on player years and salary cap
def calculateMaxContract(salaryCap, currentSalary, years):
    # Determine the maximum contract percentage based on the player's experience
    if years < 7:
        maxPercentage = 0.25
    elif 7 <= years <= 10:
        maxPercentage = 0.30
    else:
        maxPercentage = 0.35

    # Calculate the maximum contract based on the cap percentage
    maxAllowedContract = salaryCap * maxPercentage

    # Calculate the remaining cap space
    remainingCapSpace = salaryCap - currentSalary

    # Return the minimum between the max allowed by the cap and the remaining cap space
    return min(maxAllowedContract, remainingCapSpace)

# Function to calculate total salary used by the roster
def calculateTotalSalary(roster):
    return sum(player.salary for player in roster)

# Function to add a new player
def addNewPlayer(salaryCap, roster):
    name = input("Enter the new player's name: ")
    years = int(input(f"How many years has {name} been in the league? "))

    currentSalary = calculateTotalSalary(roster)
    maxOffer = calculateMaxContract(salaryCap, currentSalary, years)
    
    print(f"The maximum contract you can offer {name} is: ${maxOffer:,}")
    salary = float(input(f"Enter {name}'s new contract (maximum ${maxOffer:,}): "))

    if salary <= maxOffer:
        roster.append(Player(name, salary, years))
        print(f"{name} has been added to the roster with a contract of ${salary:,}.")
    else:
        print(f"Contract exceeds the allowed maximum of ${maxOffer:,}. {name} was not added.")

# Function to negotiate with an existing player
def negotiateExistingPlayer(salaryCap, roster):
    name = input("Enter the name of the player you want to negotiate with: ")
    player = next((p for p in roster if p.name == name), None)

    if player:
        currentSalary = calculateTotalSalary(roster) - player.salary  # Exclude the current player's salary
        maxOffer = calculateMaxContract(salaryCap, currentSalary, player.years)

        print(f"The maximum new contract you can offer {name} is: ${maxOffer:,}")
        salary = float(input(f"Enter {name}'s new contract (maximum ${maxOffer:,}): "))

        if salary <= maxOffer:
            player.salary = salary
            print(f"{name}'s contract has been updated to ${salary:,}.")
        else:
            print(f"Contract exceeds the allowed maximum of ${maxOffer:,}. Negotiation failed.")
    else:
        print(f"Player {name} not found in the roster.")

# Main function to run the program
def main():
    salaryCap = 100_000_000  # Example salary cap in dollars

    # Creating initial players and adding them to the roster
    roster = [
    Player("Fred Van Fleet", 42_846_615, 8),
    Player("Dillon Brooks", 22_255_493, 7),
    Player("Steven Adams", 12_600_000, 11),
    Player("Jalen Green", 12_483_048, 3),
    Player("Reed Shepherd", 10_098_960, 1),
    Player("Jabari Smith Jr", 9_770_880, 2),
    Player("Jeff Green", 9_600_000, 16),
    Player("Amen Thompson", 9_249_960, 2),
    Player("Jock Landale", 8_000_000, 3),
    Player("Jae'Sean Tate", 7_065_217, 4),
    Player("Alperen Sengun", 5_424_654, 3),
    Player("Aaron Holiday", 4_668_000, 6),
    Player("Tari Eason", 3_695_160, 2),
    Player("Cam Whitmore", 3_379_080, 1)
    ]

    while True:
        print("\nOptions:")
        print("1. Add a new player")
        print("2. Negotiate contract with an existing player")
        print("3. View roster")
        print("4. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            addNewPlayer(salaryCap, roster)
        elif choice == "2":
            negotiateExistingPlayer(salaryCap, roster)
        elif choice == "3":
            print("\nCurrent Roster:")
            for player in roster:
                print(f"{player.name}: ${player.salary:,}, {player.years} years in the league")
        elif choice == "4":
            print("Exiting program.")
            break
        else:
            print("Invalid option. Please try again.")

# Run the program
if __name__ == "__main__":
    main()
